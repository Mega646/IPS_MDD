<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation"
language="C#" hostspecific="True" #>
<#@ output extension=".java" #>
<#@ JSRBBRProyectoIPS processor="JSRBBRProyectoIPSDirectiveProcessor" requires="fileName='Sample.JSRBBR_DSLProyectoIPS'" #>

<#@ include file="EF.utility.CS.ttinclude" #>
<#
var fileManager=EntityFrameworkTemplateFileManager.Create(this);

foreach (Clase clase in this.TapizClases.Clase)
{
	fileManager.StartNewFile(clase.nombre + ".java");
	if(clase.ClasePadre.Count > 0)		// CABECERA CLASE
	{
		Clase[] clasePadre = new Clase[2];
		clase.ClasePadre.CopyTo(clasePadre, 0);
		if(clase is ClaseEnriquecida)
		{
			ClaseEnriquecida claseEnriqHija = (ClaseEnriquecida)clase;
			if(clase.ClasePadre[0] is ClaseAbstracta)
			{
				ClaseAbstracta claseAbs = (ClaseAbstracta)clasePadre[0];
				#>
				public class <#=claseEnriqHija.nombre#> extends <#=claseAbs.nombre#> {
				<#
			}
			else
			{
				#>
				public class <#=claseEnriqHija.nombre#> extends <#=clasePadre[0].nombre#> {
				<#
			}
		}
		else
		{
			if(clase.ClasePadre[0] is ClaseAbstracta)
			{
				ClaseAbstracta claseAbs = (ClaseAbstracta)clasePadre[0];
				#>
				public class <#=clase.nombre#> extends <#=claseAbs.nombre#> {
				<#
			}
			else
			{
				#>
				public class <#=clase.nombre#> extends <#=clasePadre[0].nombre#> {
				<#
			}
		}
	}
	else if(clase is ClaseAbstracta)
	{
		#>
		public abstract class <#=clase.nombre#> {
		<#
	}
	else
	{
		#>
		public class <#=clase.nombre#> {
		<#
	}

	foreach(Atributo atr in clase.Atributo)		// ATRIBUTOS
	{
		#>
		private String <#=atr.nombre#>;
		<#
	}
	if(clase is ClaseEnriquecida)
	{
		ClaseEnriquecida claseEnriq = (ClaseEnriquecida)clase;
		foreach(AtributoEnriquecido atrEnriq in claseEnriq.AtributoEnriquecido)
		{
			#>
			private String <#=atrEnriq.nombre#>;
			<#
		}
	}
	#>
	public <#=clase.nombre#> () {
	
	}
	<#
	foreach(Atributo atr in clase.Atributo)		// GETTERS Y SETTERS
	{
		#>
		public String get<#=atr.nombre#>()
		{
			return this.<#=atr.nombre#>;
		}
		public void set<#=atr.nombre#>(String <#=atr.nombre#>)
		{
			this.<#=atr.nombre#> = <#=atr.nombre#>;
		}
		<#
	}
	if(clase is ClaseEnriquecida)
	{
		ClaseEnriquecida claseEnriq = (ClaseEnriquecida)clase;
		foreach(AtributoEnriquecido atrEnriq in claseEnriq.AtributoEnriquecido)
		{
			#>
			public String get<#=atrEnriq.nombre#>()
			{
				return this.<#=atrEnriq.nombre#>;
			}
			public void set<#=atrEnriq.nombre#>(String <#=atrEnriq.nombre#>)
			{
				this.<#=atrEnriq.nombre#> = <#=atrEnriq.nombre#>;
			}
			<#
		}
	}

	foreach(Operacion op in clase.Operacion)	// OPERACIONES
	{
		#>
		public <#=op.valorRetorno#> <#=op.nombre#>
		<#
		foreach(Parametro p in op.Parametros)
		{
			if(p.entradaSalida == entradaSalida.entrada)
			{
				#>
				(<#=p.tipoDatos#> <#=p.nombre#>) {}
				<#
			}
		}
	}
	if(clase is ClaseEnriquecida)
	{
		ClaseEnriquecida claseEnriq = (ClaseEnriquecida)clase;
		foreach(OperacionEnriquecida opEnriq in claseEnriq.OperacionEnriquecida)
		{
			#>
			public <#=opEnriq.valorRetorno#> <#=opEnriq.nombre#>
			<#
			foreach(Parametro p in opEnriq.Parametros)
			{
				if(p.entradaSalida == entradaSalida.entrada)
				{
					#>
					(<#=p.tipoDatos#> <#=p.nombre#>) {}
					<#
				}
			}
		}
	}
	#>
	}
	<#
}
fileManager.Process();
#>