//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass TapizClases
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.TapizClases.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.TapizClases.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("b2b3e03f-7b3b-4e0a-9042-5123aaaeda24")]
	public partial class TapizClases : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizClases domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb2b3e03f, 0x7b3b, 0x4e0a, 0x90, 0x42, 0x51, 0x23, 0xaa, 0xae, 0xda, 0x24);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizClases(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizClases(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x646873cc, 0xb99a, 0x4762, 0xb6, 0x7c, 0x77, 0xa1, 0xfd, 0xf2, 0x42, 0xa8);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.TapizClases.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.TapizClases/nombre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.TapizClases/nombre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("646873cc-b99a-4762-b67c-77a1fdf242a8")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TapizClases.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<TapizClases, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TapizClases.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TapizClases.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TapizClases element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TapizClases element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.TapizClases
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.TapizClasesDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.Clase.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.JSRBBRProyectoIPS.Clase sourceClase1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.Clase;
			if (sourceClase1 != null)
			{
				// Create link for path TapizClasesHasClase.Clase
				this.Clase.Add(sourceClase1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.JSRBBRProyectoIPS.Clase sourceClase1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.Clase;
			if (sourceClase1 != null)
			{
				// Delete link for path TapizClasesHasClase.Clase
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.TapizClases)this, sourceClase1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.TapizClasesDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.ClaseDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass Clase
	/// Description for UPM_IPS.JSRBBRProyectoIPS.Clase
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Clase.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Clase.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("255d1b8f-4da2-49ac-9d2a-ef0a8c0c4d1c")]
	public partial class Clase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Clase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x255d1b8f, 0x4da2, 0x49ac, 0x9d, 0x2a, 0xef, 0x0a, 0x8c, 0x0c, 0x4d, 0x1c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x9d02704d, 0x1327, 0x4bca, 0xb1, 0xf5, 0xfd, 0x45, 0xce, 0x62, 0x99, 0xd4);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Clase.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Clase/nombre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Clase/nombre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9d02704d-1327-4bca-b1f5-fd45ce6299d4")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TapizClases opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizClases.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.Clase
		/// </summary>
		public virtual TapizClases TapizClases
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.ClaseDomainRoleId) as TapizClases;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.TapizClasesHasClase.ClaseDomainRoleId, value);
			}
		}
		#endregion
		#region Atributo opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Atributo.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Atributo> Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId);
			}
		}
		#endregion
		#region Operacion opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Operacion.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<OperacionNormal> Operacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<OperacionNormal>, OperacionNormal>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.ClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseHija opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseHija.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseInheritsClaseHija.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseHija
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseInheritsClaseHija.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region ClasePadre opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClasePadre.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseInheritsClaseHija.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseInheritsClaseHija.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region TargetClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TargetClase.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClase.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> TargetClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClase.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region SourceClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceClase.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClase.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> SourceClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClase.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseComponente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseComponente.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseIncludesTargetClase.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseComponente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseIncludesTargetClase.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseCompuesta opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseCompuesta.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseIncludesTargetClase.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseCompuesta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseIncludesTargetClase.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseRelacion opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseRelacion.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseRelatesTargetClase.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseRelacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseRelatesTargetClase.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseRelacionada opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseRelacionada.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseRelatesTargetClase.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseRelacionada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseRelatesTargetClase.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region TargetClases opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TargetClases.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClases.SourceClase
		/// </summary>
		public virtual DslModeling::ReadOnlyLinkedElementCollection<Clase> TargetClases
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::ReadOnlyLinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClases.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region SourceClases opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceClases.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClases.TargetClase
		/// </summary>
		public virtual DslModeling::ReadOnlyLinkedElementCollection<Clase> SourceClases
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::ReadOnlyLinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseReferencesTargetClases.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseAbstracta opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAbstracta.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaReferencesClaseHijaDeAbstracta.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClaseAbstracta> ClaseAbstracta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClaseAbstracta>, ClaseAbstracta>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaReferencesClaseHijaDeAbstracta.ClaseDomainRoleId);
			}
		}
		#endregion
		#region AtributoID opposite domain role accessor
		/// <summary>
		/// Gets or sets AtributoID.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.Clase
		/// </summary>
		public virtual AtributoID AtributoID
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.ClaseDomainRoleId) as AtributoID;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.ClaseDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.Atributo.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.OperacionNormal.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.AtributoID.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: ClaseHasAtributoID.AtributoID
					if (this.AtributoID != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.JSRBBRProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Create link for path ClaseHasAtributo.Atributo
				this.Atributo.Add(sourceAtributo1);

				return;
			}
				
			global::UPM_IPS.JSRBBRProyectoIPS.OperacionNormal sourceOperacionNormal2 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.OperacionNormal;
			if (sourceOperacionNormal2 != null)
			{
				// Create link for path ClaseHasOperacion.Operacion
				this.Operacion.Add(sourceOperacionNormal2);

				return;
			}
				
			global::UPM_IPS.JSRBBRProyectoIPS.AtributoID sourceAtributoID3 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.AtributoID;
			if (sourceAtributoID3 != null)
			{
				// Create link for path ClaseHasAtributoID.AtributoID
				this.AtributoID = sourceAtributoID3;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.JSRBBRProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Delete link for path ClaseHasAtributo.Atributo
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.Clase)this, sourceAtributo1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.JSRBBRProyectoIPS.OperacionNormal sourceOperacionNormal2 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.OperacionNormal;
			if (sourceOperacionNormal2 != null)
			{
				// Delete link for path ClaseHasOperacion.Operacion
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.Clase)this, sourceOperacionNormal2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.ClaseDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.OperacionNormalDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.JSRBBRProyectoIPS.AtributoID sourceAtributoID3 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.AtributoID;
			if (sourceAtributoID3 != null)
			{
				// Delete link for path ClaseHasAtributoID.AtributoID
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.Clase)this, sourceAtributoID3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.ClaseDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.AtributoIDDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass Atributo
	/// Description for UPM_IPS.JSRBBRProyectoIPS.Atributo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Atributo.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Atributo.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d7e96a6a-0262-4199-99e2-2cd5acd1691d")]
	public partial class Atributo : AtributoPadre
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Atributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd7e96a6a, 0x0262, 0x4199, 0x99, 0xe2, 0x2c, 0xd5, 0xac, 0xd1, 0x69, 0x1d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.Atributo
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass AtributoID
	/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoID
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoID.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoID.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e02cdf96-8f47-4872-9281-07eca0637627")]
	public partial class AtributoID : AtributoPadre
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AtributoID domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe02cdf96, 0x8f47, 0x4872, 0x92, 0x81, 0x07, 0xec, 0xa0, 0x63, 0x76, 0x27);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoID(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoID(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.AtributoID
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.AtributoIDDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasAtributoID.AtributoIDDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass Parametro
	/// Description for UPM_IPS.JSRBBRProyectoIPS.Parametro
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Parametro.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Parametro.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("340fb2c8-6c6c-4617-940f-70c75d035f31")]
	public partial class Parametro : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Parametro domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x340fb2c8, 0x6c6c, 0x4617, 0x94, 0x0f, 0x70, 0xc7, 0x5d, 0x03, 0x5f, 0x31);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametro(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametro(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xfcb06195, 0xf37e, 0x43f9, 0xad, 0x89, 0x79, 0x5f, 0x05, 0x57, 0xd9, 0x98);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Parametro.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Parametro/nombre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Parametro/nombre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("fcb06195-f37e-43f9-ad89-795f0557d998")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region tipoDatos domain property code
		
		/// <summary>
		/// tipoDatos domain property Id.
		/// </summary>
		public static readonly global::System.Guid tipoDatosDomainPropertyId = new global::System.Guid(0x03ef5bf3, 0xe035, 0x4088, 0x90, 0x64, 0xfd, 0xcd, 0x6e, 0x0f, 0x18, 0x86);
		
		/// <summary>
		/// Storage for tipoDatos
		/// </summary>
		private tipoDatos tipoDatosPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of tipoDatos domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Parametro.Tipo Datos
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Parametro/tipoDatos.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Parametro/tipoDatos.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("03ef5bf3-e035-4088-9064-fdcd6e0f1886")]
		public tipoDatos tipoDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatosPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tipoDatosPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.tipoDatos domain property.
		/// </summary>
		internal sealed partial class tipoDatosPropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, tipoDatos>
		{
			private tipoDatosPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.tipoDatos domain property value handler.
			/// </summary>
			public static readonly tipoDatosPropertyHandler Instance = new tipoDatosPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.tipoDatos domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tipoDatosDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed tipoDatos GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatosPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, tipoDatos newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				tipoDatos oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatosPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region entradaSalida domain property code
		
		/// <summary>
		/// entradaSalida domain property Id.
		/// </summary>
		public static readonly global::System.Guid entradaSalidaDomainPropertyId = new global::System.Guid(0x40cfcae2, 0xb883, 0x4f63, 0x89, 0x77, 0xed, 0xd8, 0xb4, 0xaa, 0x27, 0x0a);
		
		/// <summary>
		/// Storage for entradaSalida
		/// </summary>
		private entradaSalida entradaSalidaPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of entradaSalida domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Parametro.Entrada Salida
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Parametro/entradaSalida.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Parametro/entradaSalida.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("40cfcae2-b883-4f63-8977-edd8b4aa270a")]
		public entradaSalida entradaSalida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return entradaSalidaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				entradaSalidaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.entradaSalida domain property.
		/// </summary>
		internal sealed partial class entradaSalidaPropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, entradaSalida>
		{
			private entradaSalidaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.entradaSalida domain property value handler.
			/// </summary>
			public static readonly entradaSalidaPropertyHandler Instance = new entradaSalidaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.entradaSalida domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return entradaSalidaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed entradaSalida GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.entradaSalidaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, entradaSalida newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				entradaSalida oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.entradaSalidaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Operacion opposite domain role accessor
		/// <summary>
		/// Gets or sets Operacion.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.Parametro
		/// </summary>
		public virtual Operacion Operacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.ParametroDomainRoleId) as Operacion;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.ParametroDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass OperacionNormal
	/// Description for UPM_IPS.JSRBBRProyectoIPS.OperacionNormal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.OperacionNormal.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.OperacionNormal.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3d20a0cd-7c5d-4f55-bb84-82676c9bd5d5")]
	public partial class OperacionNormal : Operacion
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// OperacionNormal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3d20a0cd, 0x7c5d, 0x4f55, 0xbb, 0x84, 0x82, 0x67, 0x6c, 0x9b, 0xd5, 0xd5);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OperacionNormal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OperacionNormal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.OperacionNormal
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.OperacionNormalDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseHasOperacion.OperacionNormalDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass ClaseAbstracta
	/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseAbstracta
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.ClaseAbstracta.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.ClaseAbstracta.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("19bdf186-0f57-49c1-9405-55f50e723117")]
	public partial class ClaseAbstracta : Clase
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseAbstracta domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x19bdf186, 0x0f57, 0x49c1, 0x94, 0x05, 0x55, 0xf5, 0x0e, 0x72, 0x31, 0x17);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAbstracta(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAbstracta(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region OperacionAbstracta opposite domain role accessor
		
		/// <summary>
		/// Gets a list of OperacionAbstracta.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.ClaseAbstracta
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<OperacionAbstracta> OperacionAbstracta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<OperacionAbstracta>, OperacionAbstracta>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.ClaseAbstractaDomainRoleId);
			}
		}
		#endregion
		#region ClaseHijaDeAbstracta opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseHijaDeAbstracta.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaReferencesClaseHijaDeAbstracta.ClaseAbstracta
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseHijaDeAbstracta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaReferencesClaseHijaDeAbstracta.ClaseAbstractaDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta sourceOperacionAbstracta1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta;
			if (sourceOperacionAbstracta1 != null)
			{
				// Create link for path ClaseAbstractaHasOperacionAbstracta.OperacionAbstracta
				this.OperacionAbstracta.Add(sourceOperacionAbstracta1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta sourceOperacionAbstracta1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta;
			if (sourceOperacionAbstracta1 != null)
			{
				// Delete link for path ClaseAbstractaHasOperacionAbstracta.OperacionAbstracta
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstracta)this, sourceOperacionAbstracta1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.ClaseAbstractaDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.OperacionAbstractaDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass OperacionAbstracta
	/// Description for UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.OperacionAbstracta.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0301a401-8fbb-4108-afe9-189102ddab9d")]
	public partial class OperacionAbstracta : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// OperacionAbstracta domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0301a401, 0x8fbb, 0x4108, 0xaf, 0xe9, 0x18, 0x91, 0x02, 0xdd, 0xab, 0x9d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OperacionAbstracta(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OperacionAbstracta(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ClaseAbstracta opposite domain role accessor
		/// <summary>
		/// Gets or sets ClaseAbstracta.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.OperacionAbstracta
		/// </summary>
		public virtual ClaseAbstracta ClaseAbstracta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.OperacionAbstractaDomainRoleId) as ClaseAbstracta;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseAbstractaHasOperacionAbstracta.OperacionAbstractaDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass ClaseEnriquecida
	/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("db825b8b-2972-49e7-a35f-e8f61dbf66f2")]
	public partial class ClaseEnriquecida : Clase
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseEnriquecida domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdb825b8b, 0x2972, 0x49e7, 0xa3, 0x5f, 0xe8, 0xf6, 0x1d, 0xbf, 0x66, 0xf2);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseEnriquecida(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseEnriquecida(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region colorFondo domain property code
		
		/// <summary>
		/// colorFondo domain property Id.
		/// </summary>
		public static readonly global::System.Guid colorFondoDomainPropertyId = new global::System.Guid(0xe5ed2436, 0x1d2e, 0x406c, 0x9d, 0x56, 0x13, 0x1d, 0xde, 0x53, 0xa5, 0x7b);
		
		/// <summary>
		/// Storage for colorFondo
		/// </summary>
		private global::System.String colorFondoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of colorFondo domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida.Color Fondo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/colorFondo.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/colorFondo.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("e5ed2436-1d2e-406c-9d56-131dde53a57b")]
		public global::System.String colorFondo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorFondoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				colorFondoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.colorFondo domain property.
		/// </summary>
		internal sealed partial class colorFondoPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private colorFondoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.colorFondo domain property value handler.
			/// </summary>
			public static readonly colorFondoPropertyHandler Instance = new colorFondoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.colorFondo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return colorFondoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorFondoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorFondoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region colorLetraNombre domain property code
		
		/// <summary>
		/// colorLetraNombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid colorLetraNombreDomainPropertyId = new global::System.Guid(0xa5690b70, 0x8925, 0x42e3, 0x83, 0x3d, 0x60, 0x4d, 0xb8, 0xec, 0xb6, 0x47);
		
		/// <summary>
		/// Storage for colorLetraNombre
		/// </summary>
		private global::System.String colorLetraNombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of colorLetraNombre domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida.Color Letra Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/colorLetraNombre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/colorLetraNombre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a5690b70-8925-42e3-833d-604db8ecb647")]
		public global::System.String colorLetraNombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraNombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				colorLetraNombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.colorLetraNombre domain property.
		/// </summary>
		internal sealed partial class colorLetraNombrePropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private colorLetraNombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.colorLetraNombre domain property value handler.
			/// </summary>
			public static readonly colorLetraNombrePropertyHandler Instance = new colorLetraNombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.colorLetraNombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return colorLetraNombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraNombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraNombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region tipoLetraNombre domain property code
		
		/// <summary>
		/// tipoLetraNombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid tipoLetraNombreDomainPropertyId = new global::System.Guid(0xf532a521, 0xedcf, 0x47c4, 0xa3, 0xae, 0x31, 0xad, 0x15, 0x2f, 0x42, 0x3e);
		
		/// <summary>
		/// Storage for tipoLetraNombre
		/// </summary>
		private global::System.String tipoLetraNombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of tipoLetraNombre domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida.Tipo Letra Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/tipoLetraNombre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/tipoLetraNombre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f532a521-edcf-47c4-a3ae-31ad152f423e")]
		public global::System.String tipoLetraNombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraNombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tipoLetraNombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.tipoLetraNombre domain property.
		/// </summary>
		internal sealed partial class tipoLetraNombrePropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private tipoLetraNombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.tipoLetraNombre domain property value handler.
			/// </summary>
			public static readonly tipoLetraNombrePropertyHandler Instance = new tipoLetraNombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.tipoLetraNombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tipoLetraNombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraNombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraNombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region alineacion domain property code
		
		/// <summary>
		/// alineacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid alineacionDomainPropertyId = new global::System.Guid(0xbb85ab73, 0x8e1a, 0x4080, 0xb3, 0x4e, 0x27, 0x9b, 0x9c, 0xd7, 0xe2, 0x35);
		
		/// <summary>
		/// Storage for alineacion
		/// </summary>
		private global::System.String alineacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of alineacion domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida.Alineacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/alineacion.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida/alineacion.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("bb85ab73-8e1a-4080-b34e-279b9cd7e235")]
		public global::System.String alineacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return alineacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				alineacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.alineacion domain property.
		/// </summary>
		internal sealed partial class alineacionPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private alineacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.alineacion domain property value handler.
			/// </summary>
			public static readonly alineacionPropertyHandler Instance = new alineacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.alineacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return alineacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.alineacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.alineacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region OperacionEnriquecida opposite domain role accessor
		
		/// <summary>
		/// Gets a list of OperacionEnriquecida.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.ClaseEnriquecida
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<OperacionEnriquecida> OperacionEnriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<OperacionEnriquecida>, OperacionEnriquecida>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.ClaseEnriquecidaDomainRoleId);
			}
		}
		#endregion
		#region AtributoEnriquecido opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AtributoEnriquecido.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.ClaseEnriquecida
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AtributoEnriquecido> AtributoEnriquecido
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AtributoEnriquecido>, AtributoEnriquecido>(global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.ClaseEnriquecidaDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida sourceOperacionEnriquecida1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida;
			if (sourceOperacionEnriquecida1 != null)
			{
				// Create link for path ClaseEnriquecidaHasOperacionEnriquecida.OperacionEnriquecida
				this.OperacionEnriquecida.Add(sourceOperacionEnriquecida1);

				return;
			}
				
			global::UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido sourceAtributoEnriquecido2 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido;
			if (sourceAtributoEnriquecido2 != null)
			{
				// Create link for path ClaseEnriquecidaHasAtributoEnriquecido.AtributoEnriquecido
				this.AtributoEnriquecido.Add(sourceAtributoEnriquecido2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida sourceOperacionEnriquecida1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida;
			if (sourceOperacionEnriquecida1 != null)
			{
				// Delete link for path ClaseEnriquecidaHasOperacionEnriquecida.OperacionEnriquecida
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida)this, sourceOperacionEnriquecida1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.ClaseEnriquecidaDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.OperacionEnriquecidaDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido sourceAtributoEnriquecido2 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido;
			if (sourceAtributoEnriquecido2 != null)
			{
				// Delete link for path ClaseEnriquecidaHasAtributoEnriquecido.AtributoEnriquecido
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecida)this, sourceAtributoEnriquecido2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.ClaseEnriquecidaDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.AtributoEnriquecidoDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass AtributoEnriquecido
	/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("7484f232-20fe-458e-9063-a7c657d9c20d")]
	public partial class AtributoEnriquecido : AtributoPadre
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AtributoEnriquecido domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7484f232, 0x20fe, 0x458e, 0x90, 0x63, 0xa7, 0xc6, 0x57, 0xd9, 0xc2, 0x0d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoEnriquecido(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoEnriquecido(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region tipoLetra domain property code
		
		/// <summary>
		/// tipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid tipoLetraDomainPropertyId = new global::System.Guid(0x423a8adf, 0xfec0, 0x4dc5, 0x98, 0xf5, 0x86, 0xb8, 0x38, 0x0e, 0x2c, 0x92);
		
		/// <summary>
		/// Storage for tipoLetra
		/// </summary>
		private global::System.String tipoLetraPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of tipoLetra domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido/tipoLetra.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido/tipoLetra.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("423a8adf-fec0-4dc5-98f5-86b8380e2c92")]
		public global::System.String tipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.tipoLetra domain property.
		/// </summary>
		internal sealed partial class tipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.String>
		{
			private tipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.tipoLetra domain property value handler.
			/// </summary>
			public static readonly tipoLetraPropertyHandler Instance = new tipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.tipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region colorLetra domain property code
		
		/// <summary>
		/// colorLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid colorLetraDomainPropertyId = new global::System.Guid(0x4f6e1cbe, 0xb4aa, 0x4d47, 0x8e, 0x39, 0x03, 0x5f, 0x1c, 0x48, 0x4e, 0xc3);
		
		/// <summary>
		/// Storage for colorLetra
		/// </summary>
		private global::System.String colorLetraPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of colorLetra domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido.Color Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido/colorLetra.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido/colorLetra.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4f6e1cbe-b4aa-4d47-8e39-035f1c484ec3")]
		public global::System.String colorLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				colorLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.colorLetra domain property.
		/// </summary>
		internal sealed partial class colorLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.String>
		{
			private colorLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.colorLetra domain property value handler.
			/// </summary>
			public static readonly colorLetraPropertyHandler Instance = new colorLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.colorLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return colorLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region booleano domain property code
		
		/// <summary>
		/// booleano domain property Id.
		/// </summary>
		public static readonly global::System.Guid booleanoDomainPropertyId = new global::System.Guid(0xab7f1273, 0xff6e, 0x4c03, 0xa0, 0xd2, 0x78, 0x5e, 0xae, 0x9e, 0xee, 0x95);
		
		/// <summary>
		/// Storage for booleano
		/// </summary>
		private global::System.String booleanoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of booleano domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido.Booleano
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido/booleano.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoEnriquecido/booleano.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ab7f1273-ff6e-4c03-a0d2-785eae9eee95")]
		public global::System.String booleano
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return booleanoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				booleanoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.booleano domain property.
		/// </summary>
		internal sealed partial class booleanoPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.String>
		{
			private booleanoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.booleano domain property value handler.
			/// </summary>
			public static readonly booleanoPropertyHandler Instance = new booleanoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.booleano domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return booleanoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.booleanoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.booleanoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ClaseEnriquecida opposite domain role accessor
		/// <summary>
		/// Gets or sets ClaseEnriquecida.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.AtributoEnriquecido
		/// </summary>
		public virtual ClaseEnriquecida ClaseEnriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.AtributoEnriquecidoDomainRoleId) as ClaseEnriquecida;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasAtributoEnriquecido.AtributoEnriquecidoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass OperacionEnriquecida
	/// Description for UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("334ef9fd-ad05-4068-be87-99c949c52235")]
	public partial class OperacionEnriquecida : Operacion
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// OperacionEnriquecida domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x334ef9fd, 0xad05, 0x4068, 0xbe, 0x87, 0x99, 0xc9, 0x49, 0xc5, 0x22, 0x35);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OperacionEnriquecida(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OperacionEnriquecida(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region tipoLetra domain property code
		
		/// <summary>
		/// tipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid tipoLetraDomainPropertyId = new global::System.Guid(0x4dc0479d, 0x284c, 0x4170, 0xad, 0xdd, 0xe6, 0x6d, 0x57, 0xfe, 0x1b, 0x1b);
		
		/// <summary>
		/// Storage for tipoLetra
		/// </summary>
		private global::System.String tipoLetraPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of tipoLetra domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida/tipoLetra.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida/tipoLetra.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4dc0479d-284c-4170-addd-e66d57fe1b1b")]
		public global::System.String tipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the OperacionEnriquecida.tipoLetra domain property.
		/// </summary>
		internal sealed partial class tipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<OperacionEnriquecida, global::System.String>
		{
			private tipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the OperacionEnriquecida.tipoLetra domain property value handler.
			/// </summary>
			public static readonly tipoLetraPropertyHandler Instance = new tipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the OperacionEnriquecida.tipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(OperacionEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(OperacionEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region colorLetra domain property code
		
		/// <summary>
		/// colorLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid colorLetraDomainPropertyId = new global::System.Guid(0x95835fd9, 0x42e7, 0x41d0, 0x81, 0xd7, 0x50, 0xaa, 0x1b, 0x3a, 0x4f, 0x09);
		
		/// <summary>
		/// Storage for colorLetra
		/// </summary>
		private global::System.String colorLetraPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of colorLetra domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida.Color Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida/colorLetra.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.OperacionEnriquecida/colorLetra.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("95835fd9-42e7-41d0-81d7-50aa1b3a4f09")]
		public global::System.String colorLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				colorLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the OperacionEnriquecida.colorLetra domain property.
		/// </summary>
		internal sealed partial class colorLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<OperacionEnriquecida, global::System.String>
		{
			private colorLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the OperacionEnriquecida.colorLetra domain property value handler.
			/// </summary>
			public static readonly colorLetraPropertyHandler Instance = new colorLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the OperacionEnriquecida.colorLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return colorLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(OperacionEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(OperacionEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ClaseEnriquecida opposite domain role accessor
		/// <summary>
		/// Gets or sets ClaseEnriquecida.
		/// Description for
		/// UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.OperacionEnriquecida
		/// </summary>
		public virtual ClaseEnriquecida ClaseEnriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.OperacionEnriquecidaDomainRoleId) as ClaseEnriquecida;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.JSRBBRProyectoIPS.ClaseEnriquecidaHasOperacionEnriquecida.OperacionEnriquecidaDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass Operacion
	/// Description for UPM_IPS.JSRBBRProyectoIPS.Operacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Operacion.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Operacion.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ab06c6b1-74a6-4775-a213-ba329b643268")]
	public abstract partial class Operacion : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Operacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xab06c6b1, 0x74a6, 0x4775, 0xa2, 0x13, 0xba, 0x32, 0x9b, 0x64, 0x32, 0x68);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Operacion(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x9fea56a8, 0xe84a, 0x4dfc, 0x8e, 0x26, 0x97, 0xe5, 0xe6, 0xfd, 0x91, 0x31);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Operacion.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/nombre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/nombre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9fea56a8-e84a-4dfc-8e26-97e5e6fd9131")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Operacion, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region valorRetorno domain property code
		
		/// <summary>
		/// valorRetorno domain property Id.
		/// </summary>
		public static readonly global::System.Guid valorRetornoDomainPropertyId = new global::System.Guid(0x629ae7cd, 0xd8f6, 0x4e61, 0x9d, 0x0e, 0x19, 0xd7, 0xf3, 0x8c, 0x7d, 0xec);
		
		/// <summary>
		/// Storage for valorRetorno
		/// </summary>
		private tipoDatos valorRetornoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of valorRetorno domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Operacion.Valor Retorno
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/valorRetorno.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/valorRetorno.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("629ae7cd-d8f6-4e61-9d0e-19d7f38c7dec")]
		public tipoDatos valorRetorno
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return valorRetornoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				valorRetornoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.valorRetorno domain property.
		/// </summary>
		internal sealed partial class valorRetornoPropertyHandler : DslModeling::DomainPropertyValueHandler<Operacion, tipoDatos>
		{
			private valorRetornoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.valorRetorno domain property value handler.
			/// </summary>
			public static readonly valorRetornoPropertyHandler Instance = new valorRetornoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.valorRetorno domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return valorRetornoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed tipoDatos GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.valorRetornoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operacion element, tipoDatos newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				tipoDatos oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.valorRetornoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region operacionCalculada domain property code
		
		/// <summary>
		/// operacionCalculada domain property Id.
		/// </summary>
		public static readonly global::System.Guid operacionCalculadaDomainPropertyId = new global::System.Guid(0x1aa1aa8f, 0xf607, 0x4cd0, 0xa3, 0x1e, 0x7e, 0x50, 0xd7, 0x7b, 0xc4, 0xde);
		
		/// <summary>
		/// Gets or sets the value of operacionCalculada domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Operacion.Operacion Calculada
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/operacionCalculada.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/operacionCalculada.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("1aa1aa8f-f607-4cd0-a31e-7e50d77bc4de")]
		public global::System.String operacionCalculada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return operacionCalculadaPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.operacionCalculada domain property.
		/// </summary>
		internal sealed partial class operacionCalculadaPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Operacion, global::System.String>
		{
			private operacionCalculadaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.operacionCalculada domain property value handler.
			/// </summary>
			public static readonly operacionCalculadaPropertyHandler Instance = new operacionCalculadaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.operacionCalculada domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return operacionCalculadaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for operacionCalculada because its Kind is
				// set to Calculated. Please provide the GetoperacionCalculadaValue()
				// method on the domain class.
				return element.GetoperacionCalculadaValue();
			}
		
		}
		
		#endregion
		#region modificador domain property code
		
		/// <summary>
		/// modificador domain property Id.
		/// </summary>
		public static readonly global::System.Guid modificadorDomainPropertyId = new global::System.Guid(0x847999d6, 0xc174, 0x440f, 0x8d, 0x9a, 0x99, 0x2f, 0xd0, 0x2d, 0xdc, 0x09);
		
		/// <summary>
		/// Storage for modificador
		/// </summary>
		private modificadorAtr modificadorPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of modificador domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.Operacion.Modificador
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/modificador.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.Operacion/modificador.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("847999d6-c174-440f-8d9a-992fd02ddc09")]
		public modificadorAtr modificador
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modificadorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				modificadorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.modificador domain property.
		/// </summary>
		internal sealed partial class modificadorPropertyHandler : DslModeling::DomainPropertyValueHandler<Operacion, modificadorAtr>
		{
			private modificadorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.modificador domain property value handler.
			/// </summary>
			public static readonly modificadorPropertyHandler Instance = new modificadorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.modificador domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modificadorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed modificadorAtr GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modificadorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operacion element, modificadorAtr newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				modificadorAtr oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modificadorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Parametros opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Parametros.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.Operacion
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Parametro> Parametros
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Parametro>, Parametro>(global::UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.OperacionDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.JSRBBRProyectoIPS.Parametro.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.JSRBBRProyectoIPS.Parametro sourceParametro1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.Parametro;
			if (sourceParametro1 != null)
			{
				// Create link for path OperacionHasParametros.Parametros
				this.Parametros.Add(sourceParametro1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.JSRBBRProyectoIPS.Parametro sourceParametro1 = sourceElement as global::UPM_IPS.JSRBBRProyectoIPS.Parametro;
			if (sourceParametro1 != null)
			{
				// Delete link for path OperacionHasParametros.Parametros
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.GetLinks((global::UPM_IPS.JSRBBRProyectoIPS.Operacion)this, sourceParametro1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.OperacionDomainRoleId, global::UPM_IPS.JSRBBRProyectoIPS.OperacionHasParametros.ParametroDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.JSRBBRProyectoIPS
{
	/// <summary>
	/// DomainClass AtributoPadre
	/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoPadre
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("21488355-9e07-4212-9ffd-bc521baaac41")]
	public abstract partial class AtributoPadre : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AtributoPadre domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x21488355, 0x9e07, 0x4212, 0x9f, 0xfd, 0xbc, 0x52, 0x1b, 0xaa, 0xac, 0x41);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected AtributoPadre(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xf88e473f, 0xd57d, 0x4ac4, 0x86, 0x0e, 0x78, 0x89, 0x0c, 0x8c, 0x29, 0x47);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoPadre.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre/nombre.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre/nombre.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f88e473f-d57d-4ac4-860e-78890c8c2947")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoPadre.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoPadre, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoPadre.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoPadre.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AtributoPadre element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoPadre element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region modificador domain property code
		
		/// <summary>
		/// modificador domain property Id.
		/// </summary>
		public static readonly global::System.Guid modificadorDomainPropertyId = new global::System.Guid(0x7433a330, 0xb8c6, 0x46b4, 0xaa, 0xf5, 0x45, 0x48, 0x61, 0x25, 0x69, 0x8e);
		
		/// <summary>
		/// Storage for modificador
		/// </summary>
		private modificadorAtr modificadorPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of modificador domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoPadre.Modificador
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre/modificador.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre/modificador.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7433a330-b8c6-46b4-aaf5-45486125698e")]
		public modificadorAtr modificador
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modificadorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				modificadorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoPadre.modificador domain property.
		/// </summary>
		internal sealed partial class modificadorPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoPadre, modificadorAtr>
		{
			private modificadorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoPadre.modificador domain property value handler.
			/// </summary>
			public static readonly modificadorPropertyHandler Instance = new modificadorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoPadre.modificador domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modificadorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed modificadorAtr GetValue(AtributoPadre element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modificadorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoPadre element, modificadorAtr newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				modificadorAtr oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modificadorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region nombreCalculado domain property code
		
		/// <summary>
		/// nombreCalculado domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreCalculadoDomainPropertyId = new global::System.Guid(0x50493442, 0x9d57, 0x438a, 0xbe, 0xca, 0x0f, 0xfb, 0x89, 0x84, 0xaf, 0x7c);
		
		/// <summary>
		/// Gets or sets the value of nombreCalculado domain property.
		/// Description for UPM_IPS.JSRBBRProyectoIPS.AtributoPadre.Nombre Calculado
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre/nombreCalculado.DisplayName", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JSRBBRProyectoIPS.AtributoPadre/nombreCalculado.Description", typeof(global::UPM_IPS.JSRBBRProyectoIPS.JSRBBRProyectoIPSDomainModel), "UPM_IPS.JSRBBRProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("50493442-9d57-438a-beca-0ffb8984af7c")]
		public global::System.String nombreCalculado
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreCalculadoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the AtributoPadre.nombreCalculado domain property.
		/// </summary>
		internal sealed partial class nombreCalculadoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<AtributoPadre, global::System.String>
		{
			private nombreCalculadoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoPadre.nombreCalculado domain property value handler.
			/// </summary>
			public static readonly nombreCalculadoPropertyHandler Instance = new nombreCalculadoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoPadre.nombreCalculado domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreCalculadoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AtributoPadre element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for nombreCalculado because its Kind is
				// set to Calculated. Please provide the GetnombreCalculadoValue()
				// method on the domain class.
				return element.GetnombreCalculadoValue();
			}
		
		}
		
		#endregion
	}
}
